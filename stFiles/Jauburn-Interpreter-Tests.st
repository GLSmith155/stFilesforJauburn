TestCase subclass: #JbEnvironmentTest	instanceVariableNames: 'outer inner'	classVariableNames: ''	package: 'Jauburn-Interpreter-Tests'!!JbEnvironmentTest commentStamp: '' prior: 0!This is a copy of the unit tests for the Phsyche PEnvironment class.!!JbEnvironmentTest methodsFor: 'tests'!setUp	outer := JbEnvironment new.	inner := JbEnvironment new.	inner outerEnvironment: outer! !!JbEnvironmentTest methodsFor: 'tests'!testLookupInFails	outer at: #dad put: 'donald'.	inner at: #son put: 'riri'.	self should: [ outer at: #nodad ] raise: KeyNotFound.	self should: [ outer at: #noson ] raise: KeyNotFound.	self should: [ inner at: #nodad ] raise: KeyNotFound! !!JbEnvironmentTest methodsFor: 'tests'!testSetAtRightLevel		outer at: #dad put: 'donald'.	inner at: #son put: 'riri'.	self assert: (inner at: #son) = 'riri'.	inner lookupAt: #son put: 'fifi'.		self assert: (outer at: #dad) = 'donald'.	outer lookupAt: #dad put: 'piscou'.	self assert: (outer at: #dad) = 'piscou'.! !!JbEnvironmentTest methodsFor: 'tests'!testLookingOuterFromInner	outer at: #dad put: 'donald'.	inner at: #son put: 'riri'.	self assert: (inner at: #dad) equals: 'donald'! !!JbEnvironmentTest methodsFor: 'tests'!testSetLookup	outer at: #dad put: 'donald'.	inner at: #son put: 'riri'.	self assert: (inner at: #dad) = 'donald'.	inner lookupAt: #dad put: 'picsou'.	self assert: (outer at: #dad) = 'picsou'.	self assert: (inner at: #dad) = 'picsou'.	self deny: (inner includesKey: #dad)! !!JbEnvironmentTest methodsFor: 'tests'!testLookupAtRightLevel	outer at: #dad put: 'donald'.	self assert: (outer at: #dad) equals: 'donald'.	inner at: #son put: 'riri'.	self assert: (inner at: #son) equals: 'riri'! !TestCase subclass: #JbInterpreterTest	instanceVariableNames: 'interpreter parser'	classVariableNames: ''	package: 'Jauburn-Interpreter-Tests'!!JbInterpreterTest methodsFor: 'running'!testDeclarationBindsVariableToExpressionValue	self interpret: 'var x = 3 + 2 * 8;'.	self assert: (interpreter environment at: 'x') equals: 19.		self interpret: 'var x = 6;var y = 2*x;'.	self assert: (interpreter environment at: 'y') equals: 12! !!JbInterpreterTest methodsFor: 'running'!setUp 	parser := JbParser new.	interpreter := JbInterpreter new! !!JbInterpreterTest methodsFor: 'running'!testDeclarationCreatesVariable	self interpret: 'var x = 99;'.	self assert: (interpreter environment includesKey: 'x')! !!JbInterpreterTest methodsFor: 'running'!testAssignmentChangesVariableToExpressionValue	self interpret: 'var x = 3 + 2 * 8; x = 99;'.	self assert: (interpreter environment at: 'x') equals: 99.! !!JbInterpreterTest methodsFor: 'utilities'!interpret: aString	^ interpreter interpret: aString! !